// Generated by CoffeeScript 1.8.0
(function() {
  var assert, flatten, _;

  _ = require('lodash');

  assert = require('assert');

  flatten = function(obj, separator) {
    var filterRegexpAndArray, flattenOne, plainNested;
    if (separator == null) {
      separator = '.';
    }
    assert.notEqual(obj, null, 'obj must be != null');
    assert(!_.isArray(obj));
    assert(_.isObject(obj));
    flattenOne = function(plainObject, namespace, result) {
      if (namespace == null) {
        namespace = '';
      }
      if (result == null) {
        result = {};
      }
      return _.reduce(plainObject, function(result, value, key) {
        var newKey;
        newKey = "" + namespace + (namespace ? separator : '') + key;
        if (_.isPlainObject(value)) {
          if (_.size(value)) {
            flattenOne(value, newKey, result);
          }
        } else {
          result[newKey] = value;
        }
        return result;
      }, result);
    };
    filterRegexpAndArray = function(key, value) {
      if (_.isRegExp(value)) {
        throw new Error("Can't flatten RegExp");
      }
      if (_.isArray(value)) {
        throw new Error("Can't flatten Array");
      }
      return value;
    };
    plainNested = JSON.parse(JSON.stringify(obj, filterRegexpAndArray));
    return flattenOne(plainNested);
  };

  module.exports = flatten;

}).call(this);
